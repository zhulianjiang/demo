<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--  组织名  -->
    <groupId>com.hengnan</groupId>
    <!--  项目名称  -->
    <artifactId>hn-parent</artifactId>
    <!--  版本号  -->
    <version>1.0-SNAPSHOT</version>
    <!--  指定子项目模块  -->
    <modules>
        <module>common</module>
        <module>function-one</module>
        <module>function-two</module>
    </modules>
    <!--  pom打包方式  -->
    <packaging>pom</packaging>
    <name>demo</name>
    <description>parent project</description>

    <!-- 本项目的父模块使用spring-boot框架 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.0</version>
    </parent>

    <!-- 项目自定义属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!-- 依赖的版本号：在定义版本时，要注意的是不同的依赖版本之间会有影响，有些最新的版本不支持其他依赖的低版本一起使用-->
        <mysql.driver.version>5.1.29</mysql.driver.version>
        <org.mybatis.spring.boot.version>1.3.1</org.mybatis.spring.boot.version>
        <alibaba.druid.version>1.1.9</alibaba.druid.version>
        <spring.cloud.version>Edgware.SR1</spring.cloud.version>
        <basic.entity.version>1.0.0.2</basic.entity.version>
        <log4j.jdbc.version>1.2</log4j.jdbc.version>
        <springboot.version>2.2.5.RELEASE</springboot.version>
        <lombok.version>1.16.20</lombok.version>
        <mybatis-plus.version>3.3.1</mybatis-plus.version>
        <basic-util.version>1.0.0.1</basic-util.version>
        <hutool-all.version>4.1.5</hutool-all.version>
        <knife4j.version>2.0.7</knife4j.version>
        <commons.codec.version>1.9</commons.codec.version>
        <joda.time.version>2.9.9</joda.time.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.io.version>2.5</commons.io.version>
        <fastjson.version>1.2.29.sec06</fastjson.version>
        <pinyin4j.version>2.5.1</pinyin4j.version>
        <jwt.version>3.7.0</jwt.version>
        <xxl-job.version>2.2.0</xxl-job.version>
        <hutool.version>5.5.8</hutool.version>
        <last.version>2.2.1</last.version>
    </properties>

    <!-- 项目依赖项 -->
    <dependencyManagement>    <!-- dependencyManagement只是声明依赖，并不实现引入 -->
        <dependencies>
            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 添加junit4依赖 单元测试-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- 切面 -->
        <!--        <dependency>-->
        <!--            <groupId>org.aspectj</groupId>-->
        <!--            <artifactId>aspectjweaver</artifactId>-->
        <!--            <version>1.8.8</version>-->
        <!--        </dependency>-->
        <!-- 简化Entity代码（实体类添加@Data，编译时为所有字段添加@ToString/@EqualsAndHashCode/@Getter/为非final字段添加@Setter） -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
            <version>${mysql.driver.version}</version>
        </dependency>
        <!-- 添加数据库连接池依赖 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${alibaba.druid.version}</version>
        </dependency>
        <!-- 实体基础类 -->
        <dependency>
            <groupId>com.hn</groupId>
            <artifactId>basic-entity</artifactId>
            <version>${basic.entity.version}</version>
        </dependency>
        <!-- Log4j 日志 -->
        <dependency>
            <groupId>com.googlecode.log4jdbc</groupId>
            <artifactId>log4jdbc</artifactId>
            <version>${log4j.jdbc.version}</version>
        </dependency>
        <!-- mybatis-plus SpringBoot整合 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <!-- 数据处理工具 -->
        <dependency>
            <groupId>com.hn</groupId>
            <artifactId>basic-util</artifactId>
            <version>${basic-util.version}</version>
        </dependency>
        <dependency>
            <groupId>com.hn</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool-all.version}</version>
        </dependency>
        <!-- knife4j API增强版 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j.version}</version>
        </dependency>

        <!-- soul -->
        <dependency>
            <groupId>org.dromara</groupId>
            <artifactId>soul-client-springmvc</artifactId>
            <version>${last.version}</version>
        </dependency>

        <!--    微信支付    -->
        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-pay</artifactId>
            <version>4.0.8.B</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <!-- <scope>主要管理依赖的部署
       * compile，缺省值，适用于所有阶段，会随着项目一起发布。
       * provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。
       * runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。
       * test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。
       * system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。
    -->

    <build>
        <plugins>
            <!--打包跳过测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>